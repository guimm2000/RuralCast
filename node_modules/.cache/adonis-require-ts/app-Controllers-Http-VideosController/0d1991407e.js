"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Video_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Video"));
const VideoValidator_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Validators/VideoValidator"));
class VideosController {
    async index({ view }) {
        const videos = await Video_1.default.all();
        return view.render('videos/index', { videos: videos });
    }
    async create({ view }) {
        return view.render('videos/create');
    }
    async store({ response, request, session }) {
        const payload = await request.validate(VideoValidator_1.default);
        var url = payload.url;
        var i = url.indexOf('|');
        var splits = [url.slice(0, i), url.slice(i + 1)];
        payload.url = "https://www.youtube.com/embed/" + splits[1];
        const video = await Video_1.default.create({ titulo: payload.titulo, descricao: payload.descricao, url: payload.url });
        return response.redirect().toRoute('videos.index');
    }
    async show({ params, view }) {
        const idvideo = params.id;
        const video = await Video_1.default.findOrFail(idvideo);
        return view.render('videos/show', { video: video });
    }
}
exports.default = VideosController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlkZW9zQ29udHJvbGxlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIlZpZGVvc0NvbnRyb2xsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSxtRkFBb0M7QUFDcEMseUdBQTBEO0FBRTFELE1BQXFCLGdCQUFnQjtJQUM3QixLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsSUFBSSxFQUF1QjtRQUMvQyxNQUFNLE1BQU0sR0FBRyxNQUFNLGVBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQTtRQUVoQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBQyxDQUFDLENBQUE7SUFDckQsQ0FBQztJQUVNLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQXVCO1FBQ2hELE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsQ0FBQTtJQUNwQyxDQUFDO0lBRU0sS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUF1QjtRQUNyRSxNQUFNLE9BQU8sR0FBRyxNQUFNLE9BQU8sQ0FBQyxRQUFRLENBQUMsd0JBQWMsQ0FBQyxDQUFBO1FBRXRELElBQUksR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUE7UUFDckIsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUMsT0FBTyxDQUFDLEdBQUcsR0FBRyxnQ0FBZ0MsR0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFFeEQsTUFBTSxLQUFLLEdBQUcsTUFBTSxlQUFLLENBQUMsTUFBTSxDQUFDLEVBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUMsQ0FBQyxDQUFBO1FBRTFHLE9BQU8sUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQTtJQUNuRCxDQUFDO0lBRU0sS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQXVCO1FBQ25ELE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxFQUFFLENBQUE7UUFDekIsTUFBTSxLQUFLLEdBQUcsTUFBTSxlQUFLLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBRTdDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQTtJQUNyRCxDQUFDO0NBRUg7QUEvQkQsbUNBK0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcbmltcG9ydCBWaWRlbyBmcm9tICdBcHAvTW9kZWxzL1ZpZGVvJ1xuaW1wb3J0IFZpZGVvVmFsaWRhdG9yIGZyb20gJ0FwcC9WYWxpZGF0b3JzL1ZpZGVvVmFsaWRhdG9yJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWRlb3NDb250cm9sbGVyIHtcblx0cHVibGljIGFzeW5jIGluZGV4KHsgdmlldyB9OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7XG5cdFx0Y29uc3QgdmlkZW9zID0gYXdhaXQgVmlkZW8uYWxsKClcblxuXHRcdHJldHVybiB2aWV3LnJlbmRlcigndmlkZW9zL2luZGV4Jywge3ZpZGVvczogdmlkZW9zfSlcblx0fVxuXG5cdHB1YmxpYyBhc3luYyBjcmVhdGUoeyB2aWV3IH06IEh0dHBDb250ZXh0Q29udHJhY3QpIHtcblx0XHRyZXR1cm4gdmlldy5yZW5kZXIoJ3ZpZGVvcy9jcmVhdGUnKVxuXHR9XG5cblx0cHVibGljIGFzeW5jIHN0b3JlKHsgcmVzcG9uc2UsIHJlcXVlc3QsIHNlc3Npb24gfTogSHR0cENvbnRleHRDb250cmFjdCkge1xuXHRcdGNvbnN0IHBheWxvYWQgPSBhd2FpdCByZXF1ZXN0LnZhbGlkYXRlKFZpZGVvVmFsaWRhdG9yKVxuXG5cdFx0dmFyIHVybCA9IHBheWxvYWQudXJsXG5cdFx0dmFyIGkgPSB1cmwuaW5kZXhPZignfCcpO1xuXHRcdHZhciBzcGxpdHMgPSBbdXJsLnNsaWNlKDAsaSksIHVybC5zbGljZShpKzEpXTtcblx0XHRwYXlsb2FkLnVybCA9IFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvXCIrc3BsaXRzWzFdXG5cblx0XHRjb25zdCB2aWRlbyA9IGF3YWl0IFZpZGVvLmNyZWF0ZSh7dGl0dWxvOiBwYXlsb2FkLnRpdHVsbywgZGVzY3JpY2FvOiBwYXlsb2FkLmRlc2NyaWNhbywgdXJsOiBwYXlsb2FkLnVybH0pXG5cblx0XHRyZXR1cm4gcmVzcG9uc2UucmVkaXJlY3QoKS50b1JvdXRlKCd2aWRlb3MuaW5kZXgnKVxuXHR9XG5cblx0cHVibGljIGFzeW5jIHNob3coeyBwYXJhbXMsIHZpZXcgfTogSHR0cENvbnRleHRDb250cmFjdCkge1xuXHQgICAgY29uc3QgaWR2aWRlbyA9IHBhcmFtcy5pZFxuXHQgICAgY29uc3QgdmlkZW8gPSBhd2FpdCBWaWRlby5maW5kT3JGYWlsKGlkdmlkZW8pXG5cblx0ICAgIHJldHVybiB2aWV3LnJlbmRlcigndmlkZW9zL3Nob3cnLCB7IHZpZGVvOiB2aWRlbyB9KVxuICBcdH1cblxufVxuIl19